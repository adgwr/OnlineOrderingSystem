; (function(d) {
    var D = {
        mode: "horizontal",
        slideSelector: "li",
        infiniteLoop: !0,
        hideControlOnEnd: !1,
        speed: 500,
        easing: null,
        slideMargin: 0,
        startSlide: 0,
        randomStart: !1,
        captions: !1,
        ticker: !1,
        tickerHover: !1,
        adaptiveHeight: !1,
        adaptiveHeightSpeed: 500,
        video: !1,
        useCSS: !0,
        preloadImages: "visible",
        responsive: !0,
        slideZIndex: 50,
        wrapperClass: "bx-wrapper",
        touchEnabled: !0,
        swipeThreshold: 50,
        oneToOneTouch: !0,
        preventDefaultSwipeX: !0,
        preventDefaultSwipeY: !1,
        pager: !0,
        pagerType: "full",
        pagerShortSeparator: " / ",
        pagerSelector: null,
        buildPager: null,
        pagerCustom: null,
        controls: !0,
        nextText: "Next",
        prevText: "Prev",
        nextSelector: null,
        prevSelector: null,
        autoControls: !1,
        startText: "Start",
        stopText: "Stop",
        autoControlsCombine: !1,
        autoControlsSelector: null,
        auto: !1,
        pause: 4E3,
        autoStart: !0,
        autoDirection: "next",
        autoHover: !1,
        autoDelay: 0,
        autoSlideForOnePage: !1,
        minSlides: 1,
        maxSlides: 1,
        moveSlides: 0,
        slideWidth: 0,
        onSliderLoad: function() {},
        onSlideBefore: function() {},
        onSlideAfter: function() {},
        onSlideNext: function() {},
        onSlidePrev: function() {},
        onSliderResize: function() {}
    };
    d.fn.bxSlider = function(p) {
        if (0 == this.length) return this;
        if (1 < this.length) return this.each(function() {
            d(this).bxSlider(p)
        }),
        this;
        var a = {},
        c = this,
        t = d(window).width(),
        u = d(window).height(),
        v = function() {
            a.settings = d.extend({},
            D, p);
            a.settings.slideWidth = parseInt(a.settings.slideWidth);
            a.children = c.children(a.settings.slideSelector);
            a.children.length < a.settings.minSlides && (a.settings.minSlides = a.children.length);
            a.children.length < a.settings.maxSlides && (a.settings.maxSlides = a.children.length);
            a.settings.randomStart && (a.settings.startSlide = Math.floor(Math.random() * a.children.length));
            a.active = {
                index: a.settings.startSlide
            };
            a.carousel = 1 < a.settings.minSlides || 1 < a.settings.maxSlides;
            a.carousel && (a.settings.preloadImages = "all");
            a.minThreshold = a.settings.minSlides * a.settings.slideWidth + (a.settings.minSlides - 1) * a.settings.slideMargin;
            a.maxThreshold = a.settings.maxSlides * a.settings.slideWidth + (a.settings.maxSlides - 1) * a.settings.slideMargin;
            a.working = !1;
            a.controls = {};
            a.interval = null;
            a.animProp = "vertical" == a.settings.mode ? "top": "left";
            a.usingCSS = a.settings.useCSS && "fade" != a.settings.mode &&
            function() {
                var b = document.createElement("div"),
                e = ["WebkitPerspective", "MozPerspective", "OPerspective", "msPerspective"],
                c;
                for (c in e) if (void 0 !== b.style[e[c]]) return a.cssPrefix = e[c].replace("Perspective", "").toLowerCase(),
                a.animProp = "-" + a.cssPrefix + "-transform",
                !0;
                return ! 1
            } ();
            "vertical" == a.settings.mode && (a.settings.maxSlides = a.settings.minSlides);
            c.data("origStyle", c.attr("style"));
            c.children(a.settings.slideSelector).each(function() {
                d(this).data("origStyle", d(this).attr("style"))
            });
            E()
        },
        E = function() {
            c.wrap('<div class="' + a.settings.wrapperClass + '"><div class="bx-viewport"></div></div>');
            a.viewport = c.parent();
            a.loader = d('<div class="bx-loading" />');
            a.viewport.prepend(a.loader);
            c.css({
                width: "horizontal" == a.settings.mode ? 100 * a.children.length + 215 + "%": "auto",
                position: "relative"
            });
            a.usingCSS && a.settings.easing ? c.css("-" + a.cssPrefix + "-transition-timing-function", a.settings.easing) : a.settings.easing || (a.settings.easing = "swing");
            k();
            a.viewport.css({
                width: "100%",
                overflow: "hidden",
                position: "relative"
            });
            a.viewport.parent().css({
                maxWidth: F()
            });
            a.settings.pager || a.viewport.parent().css({
                margin: "0 auto 0px"
            });
            a.children.css({
                "float": "horizontal" == a.settings.mode ? "left": "none",
                listStyle: "none",
                position: "relative"
            });
            a.children.css("width", w());
            "horizontal" == a.settings.mode && 0 < a.settings.slideMargin && a.children.css("marginRight", a.settings.slideMargin);
            "vertical" == a.settings.mode && 0 < a.settings.slideMargin && a.children.css("marginBottom", a.settings.slideMargin);
            "fade" == a.settings.mode && (a.children.css({
                position: "absolute",
                zIndex: 0,
                display: "none"
            }), a.children.eq(a.settings.startSlide).css({
                zIndex: a.settings.slideZIndex,
                display: "block"
            }));
            a.controls.el = d('<div class="bx-controls" />');
            a.settings.captions && G();
            a.active.last = a.settings.startSlide == h() - 1;
            a.settings.video && c.fitVids();
            a.children.eq(a.settings.startSlide);
            a.settings.ticker ? a.settings.pager = !1 : (a.settings.pager && (a.settings.pagerCustom ? a.pagerEl = d(a.settings.pagerCustom) : (a.pagerEl = d('<div class="bx-pager" />'), a.settings.pagerSelector ? d(a.settings.pagerSelector).html(a.pagerEl) : a.controls.el.addClass("bx-has-pager").append(a.pagerEl), x()), a.pagerEl.on("click", "a", H)), a.settings.controls && (a.controls.next = d('<a class="bx-next" href="">' + a.settings.nextText + "</a>"), a.controls.prev = d('<a class="bx-prev" href="">' + a.settings.prevText + "</a>"), a.controls.next.bind("click", I), a.controls.prev.bind("click", J), a.settings.nextSelector && d(a.settings.nextSelector).append(a.controls.next), a.settings.prevSelector && d(a.settings.prevSelector).append(a.controls.prev), a.settings.nextSelector || a.settings.prevSelector || (a.controls.directionEl = d('<div class="bx-controls-direction" />'), a.controls.directionEl.append(a.controls.prev).append(a.controls.next), a.controls.el.addClass("bx-has-controls-direction").append(a.controls.directionEl))), a.settings.auto && a.settings.autoControls && (a.controls.start = d('<div class="bx-controls-auto-item"><a class="bx-start" href="">' + a.settings.startText + "</a></div>"), a.controls.stop = d('<div class="bx-controls-auto-item"><a class="bx-stop" href="">' + a.settings.stopText + "</a></div>"), a.controls.autoEl = d('<div class="bx-controls-auto" />'), a.controls.autoEl.on("click", ".bx-start", K), a.controls.autoEl.on("click", ".bx-stop", L), a.settings.autoControlsCombine ? a.controls.autoEl.append(a.controls.start) : a.controls.autoEl.append(a.controls.start).append(a.controls.stop), a.settings.autoControlsSelector ? d(a.settings.autoControlsSelector).html(a.controls.autoEl) : a.controls.el.addClass("bx-has-controls-auto").append(a.controls.autoEl), q(a.settings.autoStart ? "stop": "start")), (a.settings.controls || a.settings.autoControls || a.settings.pager) && a.viewport.after(a.controls.el));
            if (a.settings.infiniteLoop && "fade" != a.settings.mode && !a.settings.ticker) {
                var b = "vertical" == a.settings.mode ? a.settings.minSlides: a.settings.maxSlides,
                e = a.children.slice(0, b).clone().addClass("bx-clone"),
                b = a.children.slice( - b).clone().addClass("bx-clone");
                c.append(e).prepend(b)
            }
            a.loader.remove();
            y();
            "vertical" == a.settings.mode && (a.settings.adaptiveHeight = !0);
            a.viewport.height(n());
            c.redrawSlider();
            a.settings.onSliderLoad(a.active.index);
            a.initialized = !0;
            a.settings.responsive && d(window).bind("resize", z);
            a.settings.auto && a.settings.autoStart && (1 < h() || a.settings.autoSlideForOnePage) && M();
            a.settings.ticker && N();
            a.settings.pager && r(a.settings.startSlide);
            a.settings.controls && A();
            a.settings.touchEnabled && !a.settings.ticker && (a.touch = {
                start: {
                    x: 0,
                    y: 0
                },
                end: {
                    x: 0,
                    y: 0
                }
            },
            a.viewport.bind("touchstart", O))
        },
        n = function() {
            var b = 0,
            e = d();
            if ("vertical" == a.settings.mode || a.settings.adaptiveHeight) if (a.carousel) {
                var c = 1 == a.settings.moveSlides ? a.active.index: a.active.index * m(),
                e = a.children.eq(c);
                for (i = 1; i <= a.settings.maxSlides - 1; i++) e = c + i >= a.children.length ? e.add(a.children.eq(i - 1)) : e.add(a.children.eq(c + i))
            } else e = a.children.eq(a.active.index);
            else e = a.children;
            "vertical" == a.settings.mode ? (e.each(function(a) {
                b += d(this).height()
            }), 0 < a.settings.slideMargin && (b += a.settings.slideMargin * (a.settings.minSlides - 1))) : b = Math.max.apply(Math, e.map(function() {
                return d(this).height()
            }).get());
            "border-box" == a.viewport.css("box-sizing") ? b += parseFloat(a.viewport.css("padding-top")) + parseFloat(a.viewport.css("padding-bottom")) + parseFloat(a.viewport.css("border-top-width")) + parseFloat(a.viewport.css("border-bottom-width")) : "padding-box" == a.viewport.css("box-sizing") && (b += parseFloat(a.viewport.css("padding-top")) + parseFloat(a.viewport.css("padding-bottom")));
            return b
        },
        F = function() {
            var b = "100%";
            0 < a.settings.slideWidth && (b = "horizontal" == a.settings.mode ? a.settings.maxSlides * a.settings.slideWidth + (a.settings.maxSlides - 1) * a.settings.slideMargin: a.settings.slideWidth);
            return b
        },
        w = function() {
            var b = a.settings.slideWidth,
            e = a.viewport.width();
            0 == a.settings.slideWidth || a.settings.slideWidth > e && !a.carousel || "vertical" == a.settings.mode ? b = e: 1 < a.settings.maxSlides && "horizontal" == a.settings.mode && !(e > a.maxThreshold) && e < a.minThreshold && (b = (e - a.settings.slideMargin * (a.settings.minSlides - 1)) / a.settings.minSlides);
            return b
        },
        k = function() {
            var b = 1;
            "horizontal" == a.settings.mode && 0 < a.settings.slideWidth ? a.viewport.width() < a.minThreshold ? b = a.settings.minSlides: a.viewport.width() > a.maxThreshold ? b = a.settings.maxSlides: (b = a.children.first().width() + a.settings.slideMargin, b = Math.floor((a.viewport.width() + a.settings.slideMargin) / b)) : "vertical" == a.settings.mode && (b = a.settings.minSlides);
            return b
        },
        h = function() {
            var b = 0;
            if (0 < a.settings.moveSlides) if (a.settings.infiniteLoop) b = Math.ceil(a.children.length / m());
            else for (var e = 0,
            c = 0; e < a.children.length;)++b,
            e = c + k(),
            c += a.settings.moveSlides <= k() ? a.settings.moveSlides: k();
            else b = Math.ceil(a.children.length / k());
            return b
        },
        m = function() {
            return 0 < a.settings.moveSlides && a.settings.moveSlides <= k() ? a.settings.moveSlides: k()
        },
        y = function() {
            if (a.children.length > a.settings.maxSlides && a.active.last && !a.settings.infiniteLoop) if ("horizontal" == a.settings.mode) {
                var b = a.children.last(),
                c = b.position();
                f( - (c.left - (a.viewport.width() - b.outerWidth())), "reset", 0)
            } else "vertical" == a.settings.mode && (c = a.children.eq(a.children.length - a.settings.minSlides).position(), f( - c.top, "reset", 0));
            else c = a.children.eq(a.active.index * m()).position(),
            a.active.index == h() - 1 && (a.active.last = !0),
            void 0 != c && ("horizontal" == a.settings.mode ? f( - c.left, "reset", 0) : "vertical" == a.settings.mode && f( - c.top, "reset", 0))
        },
        f = function(b, e, d, g) {
            if (a.usingCSS) b = "vertical" == a.settings.mode ? "translate3d(0, " + b + "px, 0)": "translate3d(" + b + "px, 0, 0)",
            c.css("-" + a.cssPrefix + "-transition-duration", d / 1E3 + "s"),
            "slide" == e ? (c.css(a.animProp, b), c.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd",
            function() {
                c.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd");
                s()
            })) : "reset" == e ? c.css(a.animProp, b) : "ticker" == e && (c.css("-" + a.cssPrefix + "-transition-timing-function", "linear"), c.css(a.animProp, b), c.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd",
            function() {
                c.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd");
                f(g.resetValue, "reset", 0);
                l()
            }));
            else {
                var h = {};
                h[a.animProp] = b;
                "slide" == e ? c.animate(h, d, a.settings.easing,
                function() {
                    s()
                }) : "reset" == e ? c.css(a.animProp, b) : "ticker" == e && c.animate(h, speed, "linear",
                function() {
                    f(g.resetValue, "reset", 0);
                    l()
                })
            }
        },
        x = function() {
            for (var b = "",
            c = h(), f = 0; f < c; f++) {
                var g = "";
                a.settings.buildPager && d.isFunction(a.settings.buildPager) ? (g = a.settings.buildPager(f), a.pagerEl.addClass("bx-custom-pager")) : (g = f + 1, a.pagerEl.addClass("bx-default-pager"));
                b += '<div class="bx-pager-item"><a href="" data-slide-index="' + f + '" class="bx-pager-link">' + g + "</a></div>"
            }
            a.pagerEl.html(b)
        },
        G = function() {
            a.children.each(function(a) {
                a = d(this).find("img:first").attr("title");
                void 0 != a && ("" + a).length && d(this).append('<div class="bx-caption"><span>' + a + "</span></div>")
            })
        },
        I = function(b) {
            a.settings.auto && c.stopAuto();
            c.goToNextSlide();
            b.preventDefault()
        },
        J = function(b) {
            a.settings.auto && c.stopAuto();
            c.goToPrevSlide();
            b.preventDefault()
        },
        K = function(a) {
            c.startAuto();
            a.preventDefault()
        },
        L = function(a) {
            c.stopAuto();
            a.preventDefault()
        },
        H = function(b) {
            a.settings.auto && c.stopAuto();
            var e = d(b.currentTarget);
            void 0 !== e.attr("data-slide-index") && (e = parseInt(e.attr("data-slide-index")), e != a.active.index && c.goToSlide(e), b.preventDefault())
        },
        r = function(b) {
            var c = a.children.length;
            "short" == a.settings.pagerType ? (1 < a.settings.maxSlides && (c = Math.ceil(a.children.length / a.settings.maxSlides)), a.pagerEl.html(b + 1 + a.settings.pagerShortSeparator + c)) : (a.pagerEl.find("a").removeClass("active"), a.pagerEl.each(function(a, c) {
                d(c).find("a").eq(b).addClass("active")
            }))
        },
        s = function() {
            if (a.settings.infiniteLoop) {
                var b = "";
                0 == a.active.index ? b = a.children.eq(0).position() : a.active.index == h() - 1 && a.carousel ? b = a.children.eq((h() - 1) * m()).position() : a.active.index == a.children.length - 1 && (b = a.children.eq(a.children.length - 1).position());
                b && ("horizontal" == a.settings.mode ? f( - b.left, "reset", 0) : "vertical" == a.settings.mode && f( - b.top, "reset", 0))
            }
            a.working = !1;
            a.settings.onSlideAfter(a.children.eq(a.active.index), a.oldIndex, a.active.index)
        },
        q = function(b) {
            a.settings.autoControlsCombine ? a.controls.autoEl.html(a.controls[b]) : (a.controls.autoEl.find("a").removeClass("active"), a.controls.autoEl.find("a:not(.bx-" + b + ")").addClass("active"))
        },
        A = function() {
            1 == h() ? (a.controls.prev.addClass("disabled"), a.controls.next.addClass("disabled")) : !a.settings.infiniteLoop && a.settings.hideControlOnEnd && (0 == a.active.index ? (a.controls.prev.addClass("disabled"), a.controls.next.removeClass("disabled")) : a.active.index == h() - 1 ? (a.controls.next.addClass("disabled"), a.controls.prev.removeClass("disabled")) : (a.controls.prev.removeClass("disabled"), a.controls.next.removeClass("disabled")))
        },
        M = function() {
            0 < a.settings.autoDelay ? setTimeout(c.startAuto, a.settings.autoDelay) : c.startAuto();
            a.settings.autoHover && c.hover(function() {
                a.interval && (c.stopAuto(!0), a.autoPaused = !0)
            },
            function() {
                a.autoPaused && (c.startAuto(!0), a.autoPaused = null)
            })
        },
        N = function() {
            var b = 0;
            "next" == a.settings.autoDirection ? c.append(a.children.clone().addClass("bx-clone")) : (c.prepend(a.children.clone().addClass("bx-clone")), b = a.children.first().position(), b = "horizontal" == a.settings.mode ? -b.left: -b.top);
            f(b, "reset", 0);
            a.settings.pager = !1;
            a.settings.controls = !1;
            a.settings.autoControls = !1;
            a.settings.tickerHover && !a.usingCSS && a.viewport.hover(function() {
                c.stop()
            },
            function() {
                var b = 0;
                a.children.each(function(c) {
                    b += "horizontal" == a.settings.mode ? d(this).width() : d(this).height()
                });
                var f = a.settings.speed / b * (b - Math.abs(parseInt(c.css("horizontal" == a.settings.mode ? "left": "top"))));
                l(f)
            });
            l()
        },
        l = function(b) {
            speed = b ? b: a.settings.speed;
            b = {
                left: 0,
                top: 0
            };
            var e = {
                left: 0,
                top: 0
            };
            "next" == a.settings.autoDirection ? b = c.find(".bx-clone").first().position() : e = a.children.first().position();
            f("horizontal" == a.settings.mode ? -b.left: -b.top, "ticker", speed, {
                resetValue: "horizontal" == a.settings.mode ? -e.left: -e.top
            })
        },
        O = function(b) {
            a.working ? b.preventDefault() : (a.touch.originalPos = c.position(), a.touch.start.x = b.changedTouches[0].pageX, a.touch.start.y = b.changedTouches[0].pageY, a.viewport.bind("touchmove", B), a.viewport.bind("touchend", C))
        },
        B = function(b) {
            var c = Math.abs(b.changedTouches[0].pageX - a.touch.start.x),
            d = Math.abs(b.changedTouches[0].pageY - a.touch.start.y);
            3 * c > d && a.settings.preventDefaultSwipeX ? b.preventDefault() : 3 * d > c && a.settings.preventDefaultSwipeY && b.preventDefault();
            "fade" != a.settings.mode && a.settings.oneToOneTouch && (c = 0, "horizontal" == a.settings.mode ? (b = b.changedTouches[0].pageX - a.touch.start.x, c = a.touch.originalPos.left + b) : (b = b.changedTouches[0].pageY - a.touch.start.y, c = a.touch.originalPos.top + b), f(c, "reset", 0))
        },
        C = function(b) {
            a.viewport.unbind("touchmove", B);
            var d = 0;
            a.touch.end.x = b.changedTouches[0].pageX;
            a.touch.end.y = b.changedTouches[0].pageY;
            "fade" == a.settings.mode ? (b = Math.abs(a.touch.start.x - a.touch.end.x), b >= a.settings.swipeThreshold && (a.touch.start.x > a.touch.end.x ? c.goToNextSlide() : c.goToPrevSlide(), c.stopAuto())) : ("horizontal" == a.settings.mode ? (b = a.touch.end.x - a.touch.start.x, d = a.touch.originalPos.left) : (b = a.touch.end.y - a.touch.start.y, d = a.touch.originalPos.top), !a.settings.infiniteLoop && (0 == a.active.index && 0 < b || a.active.last && 0 > b) ? f(d, "reset", 200) : Math.abs(b) >= a.settings.swipeThreshold ? (0 > b ? c.goToNextSlide() : c.goToPrevSlide(), c.stopAuto()) : f(d, "reset", 200));
            a.viewport.unbind("touchend", C)
        },
        z = function(b) {
            if (a.initialized) {
                b = d(window).width();
                var e = d(window).height();
                if (t != b || u != e) t = b,
                u = e,
                c.redrawSlider(),
                a.settings.onSliderResize.call(c, a.active.index)
            }
        };
        c.goToSlide = function(b, e) {
            if (!a.working && a.active.index != b) {
                a.working = !0;
                a.oldIndex = a.active.index;
                0 > b ? a.active.index = h() - 1 : b >= h() ? a.active.index = 0 : a.active.index = b;
                a.settings.onSlideBefore(a.children.eq(a.active.index), a.oldIndex, a.active.index);
                if ("next" == e) a.settings.onSlideNext(a.children.eq(a.active.index), a.oldIndex, a.active.index);
                else if ("prev" == e) a.settings.onSlidePrev(a.children.eq(a.active.index), a.oldIndex, a.active.index);
                a.active.last = a.active.index >= h() - 1;
                a.settings.pager && r(a.active.index);
                a.settings.controls && A();
                if ("fade" == a.settings.mode) a.settings.adaptiveHeight && a.viewport.height() != n() && a.viewport.animate({
                    height: n()
                },
                a.settings.adaptiveHeightSpeed),
                a.children.each(function(b, c) {
                    "none" == d(c).css("display") && d(c).fadeOut(a.settings.speed).css({
                        zIndex: 0
                    })
                }),
                a.children.eq(a.active.index).css("zIndex", a.settings.slideZIndex + 1).fadeIn(a.settings.speed,
                function() {
                    d(this).css("zIndex", a.settings.slideZIndex);
                    s()
                });
                else {
                    a.settings.adaptiveHeight && a.viewport.height() != n() && a.viewport.animate({
                        height: n()
                    },
                    a.settings.adaptiveHeightSpeed);
                    var k = 0,
                    g = {
                        left: 0,
                        top: 0
                    };
                    if (!a.settings.infiniteLoop && a.carousel && a.active.last) if ("horizontal" == a.settings.mode) var l = a.children.eq(a.children.length - 1),
                    g = l.position(),
                    k = a.viewport.width() - l.outerWidth();
                    else g = a.children.eq(a.children.length - a.settings.minSlides).position();
                    else a.carousel && a.active.last && "prev" == e ? (g = 1 == a.settings.moveSlides ? a.settings.maxSlides - m() : (h() - 1) * m() - (a.children.length - a.settings.maxSlides), l = c.children(".bx-clone").eq(g), g = l.position()) : "next" == e && 0 == a.active.index ? (g = d(".bx-clone", c).eq(a.settings.maxSlides).position(), a.active.last = !1) : 0 <= b && (g = b * m(), g = a.children.eq(g).position());
                    "undefined" !== typeof g && f("horizontal" == a.settings.mode ? -(g.left - k) : -g.top, "slide", a.settings.speed)
                }
            }
        };
        c.goToNextSlide = function() {
            if (a.settings.infiniteLoop || !a.active.last) {
                var b = parseInt(a.active.index) + 1;
                c.goToSlide(b, "next")
            }
        };
        c.goToPrevSlide = function() {
            if (a.settings.infiniteLoop || 0 != a.active.index) {
                var b = parseInt(a.active.index) - 1;
                c.goToSlide(b, "prev")
            }
        };
        c.startAuto = function(b) {
            a.interval || (a.interval = setInterval(function() {
                "next" == a.settings.autoDirection ? c.goToNextSlide() : c.goToPrevSlide()
            },
            a.settings.pause), a.settings.autoControls && !0 != b && q("stop"))
        };
        c.stopAuto = function(b) {
            a.interval && (clearInterval(a.interval), a.interval = null, a.settings.autoControls && !0 != b && q("start"))
        };
        c.getCurrentSlide = function() {
            return a.active.index
        };
        c.getCurrentSlideElement = function() {
            return a.children.eq(a.active.index)
        };
        c.getSlideCount = function() {
            return a.children.length
        };
        c.redrawSlider = function() {
            a.children.add(c.find(".bx-clone")).width(w());
            a.viewport.css("height", n());
            a.settings.ticker || y();
            a.active.last && (a.active.index = h() - 1);
            a.active.index >= h() && (a.active.last = !0);
            a.settings.pager && !a.settings.pagerCustom && (x(), r(a.active.index))
        };
        c.destroySlider = function() {
            a.initialized && (a.initialized = !1, d(".bx-clone", this).remove(), a.children.each(function() {
                void 0 != d(this).data("origStyle") ? d(this).attr("style", d(this).data("origStyle")) : d(this).removeAttr("style")
            }), void 0 != d(this).data("origStyle") ? this.attr("style", d(this).data("origStyle")) : d(this).removeAttr("style"), d(this).unwrap().unwrap(), a.controls.el && a.controls.el.remove(), a.controls.next && a.controls.next.remove(), a.controls.prev && a.controls.prev.remove(), a.pagerEl && a.settings.controls && a.pagerEl.remove(), d(".bx-caption", this).remove(), a.controls.autoEl && a.controls.autoEl.remove(), clearInterval(a.interval), a.settings.responsive && d(window).unbind("resize", z))
        };
        c.reloadSlider = function(a) {
            void 0 != a && (p = a);
            c.destroySlider();
            v()
        };
        v();
        return this
    }
})(window.Zepto);